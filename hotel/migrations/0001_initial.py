# Generated by Django 5.0.1 on 2024-02-05 15:01

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.IntegerField(validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='Phone number must be 10 digits long.', regex='^\\d{10}$')])),
                ('message', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'ContactUs',
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=100)),
                ('event_date', models.DateField()),
                ('event_time', models.TimeField()),
                ('event_description', models.TextField()),
                ('event_image', models.ImageField(upload_to='event_image/')),
            ],
            options={
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_vision', models.CharField(max_length=100)),
                ('mission', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='HotelBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='images/hotel_banner')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='images/hotel_banner')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='images/hotel_banner')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='images/hotel_banner')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='images/hotel_banner')),
                ('image6', models.ImageField(blank=True, null=True, upload_to='images/hotel_banner')),
                ('image7', models.ImageField(blank=True, null=True, upload_to='images/hotel_banner')),
            ],
        ),
        migrations.CreateModel(
            name='HotelData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(max_length=100)),
                ('hotel_address', models.CharField(max_length=100)),
                ('hotel_phone', models.CharField(max_length=100)),
                ('hotel_email', models.EmailField(max_length=100)),
                ('hotel_website', models.URLField(max_length=100)),
                ('hotel_description', models.TextField()),
                ('hotel_image', models.ImageField(upload_to='hotel_image/')),
            ],
            options={
                'verbose_name_plural': 'Hotel Data',
            },
        ),
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Menu Category',
            },
        ),
        migrations.CreateModel(
            name='MenuImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='menu_image/')),
                ('caption', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='MenuList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.FloatField()),
                ('description', models.TextField()),
                ('category', models.ManyToManyField(related_name='menucategory', to='hotel.menucategory')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewAndRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('review', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail', models.TextField()),
                ('goal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='hotel.goal')),
                ('user_review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotel.reviewandrating')),
            ],
            options={
                'verbose_name_plural': 'AboutUs',
            },
        ),
    ]
